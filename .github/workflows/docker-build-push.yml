name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  release:
    types: [published]
  workflow_dispatch:

env:
  DOCKERFILE: Dockerfile.test
  HELM_CHART_PATH: helm/test-app

permissions:
  contents: write
  packages: write
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract Git metadata
        id: meta
        run: |
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT

          # Build image name from username
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/test-app"
          echo "image=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          
          # Determine tags
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "tags=${IMAGE_NAME}:${VERSION},${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/main ]] || [[ $GITHUB_REF == refs/heads/master ]]; then
            echo "version=latest" >> $GITHUB_OUTPUT
            echo "tags=${IMAGE_NAME}:latest,${IMAGE_NAME}:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          else
            BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/[^a-zA-Z0-9._-]/-/g')
            echo "version=${BRANCH_NAME}" >> $GITHUB_OUTPUT
            echo "tags=${IMAGE_NAME}:${BRANCH_NAME}" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            GIT_COMMIT=${{ steps.meta.outputs.commit }}
            GIT_BRANCH=${{ steps.meta.outputs.branch }}
            BUILD_DATE=${{ steps.meta.outputs.date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      - name: Image digest
        run: |
          echo "Image pushed with tags: ${{ steps.meta.outputs.tags }}"
      
      - name: Update Helm Chart on Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Update Chart.yaml with new version and appVersion
          sed -i "s/^version:.*/version: ${VERSION}/" ${HELM_CHART_PATH}/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${VERSION}\"/" ${HELM_CHART_PATH}/Chart.yaml
          
          echo "Updated Helm chart to version ${VERSION}"
          cat ${HELM_CHART_PATH}/Chart.yaml
      
      - name: Package Helm Chart
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          
          # Package the chart
          helm package ${HELM_CHART_PATH} -d ./helm-packages
          
          echo "Helm chart packaged successfully"
          ls -la ./helm-packages/
      
      - name: Create or Update GitHub Release with Helm Chart
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./helm-packages/*.tgz
          make_latest: true
          fail_on_unmatched_files: false
          body: |
            ## Docker Image
            ```
            docker pull ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }}
            ```
            
            ## Helm Installation
            ```bash
            # Add the Helm repository
            helm repo add test-app https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
            helm repo update
            
            # Install the chart
            helm install my-test-app test-app/test-app --version ${{ steps.meta.outputs.version }}
            
            # Or install from release assets
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/test-app-${{ steps.meta.outputs.version }}.tgz
            helm install test-app test-app-${{ steps.meta.outputs.version }}.tgz
            ```
            
            ## Git Information
            - **Commit**: ${{ steps.meta.outputs.commit }}
            - **Branch**: ${{ steps.meta.outputs.branch }}
            - **Build Date**: ${{ steps.meta.outputs.date }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Checkout gh-pages branch
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-repo
          fetch-depth: 0
        continue-on-error: true
      
      - name: Setup Git for gh-pages
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Initialize gh-pages if needed
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          if [ ! -d "gh-pages-repo" ]; then
            echo "gh-pages branch does not exist, creating it"
            mkdir -p gh-pages-repo
            cd gh-pages-repo
            git init
            git checkout -b gh-pages
            
            # Create initial index.html
            cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test App Helm Repository</title>
              <style>
                  body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
                  h1 { color: #333; }
                  code { background: #f4f4f4; padding: 2px 6px; border-radius: 3px; }
                  pre { background: #f4f4f4; padding: 15px; border-radius: 5px; overflow-x: auto; }
              </style>
          </head>
          <body>
              <h1>Test App Helm Repository</h1>
              <p>This is a Helm chart repository for the Test App.</p>
              
              <h2>Usage</h2>
              <pre><code>helm repo add test-app https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          helm repo update
          helm search repo test-app
          helm install my-test-app test-app/test-app</code></pre>
              
              <h2>Available Charts</h2>
              <p>See <a href="index.yaml">index.yaml</a> for available chart versions.</p>
              
              <h2>Source</h2>
              <p>Source code: <a href="https://github.com/${{ github.repository }}">github.com/${{ github.repository }}</a></p>
          </body>
          </html>
          EOF
            
            git add index.html
            git commit -m "Initialize gh-pages branch"
            git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git push origin gh-pages
          fi
      
      - name: Update Helm Repository Index
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd gh-pages-repo
          
          # Copy packaged charts to gh-pages
          cp -f ../helm-packages/*.tgz . || echo "No charts to copy"
          
          # Update or create Helm repository index
          helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          
          echo "Helm repository index updated"
          cat index.yaml
      
      - name: Commit and Push to gh-pages
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd gh-pages-repo
          git add .
          git commit -m "Update Helm repository for version ${{ steps.meta.outputs.version }}" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages
